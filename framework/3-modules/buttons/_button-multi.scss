///////////////////////////////////////////////////////////////////////////
// BTN MULTI //
///////////////////////////////////////////////////////////////////////////
#{$ui}.btn-multi{
	padding:						10px;
	position:						relative;
	width:							fit-content;
	box-sizing:						border-box;
	height:							fit-content;

	&.resp-w{
		width:						100%!important;
	}

	&.resp-h{		
		height:						auto;
	}

	#{$ui}.btn{
		display:					flex;
		width:						100%;
		height:						100%;
		flex-direction:				row;
		align-items:				stretch;
		padding:					10px!important;

		&.colored{
			.content{
				color:				RGBA(var(--sch-clr-active-text) / var(--sch-clr-active-text-op));
				@include			transition(color $transition-scheme 0s ease-in-out);
				&:active{
					color:			white!important;
				}
			}
		}

		&.active,
		&:active{
			.pbar{
				.pbar--item::after{
					background:		RGBA(var(--sch-clr-ui-text) / 20%);
					@include		transition(background $transition-scheme 0s ease-in-out);
				}
			}
		}

		.content{
			display:				flex;
			flex-direction:			column;
			align-self:				center;
			width:					100%;

			.align-left{			text-align: left; }
			.align-center{			text-align: center; }
			.align-right{			text-align: right; }
		}

		@each $btn--size in $btn--size-list{
			&.#{nth($btn--size, 1)}{
				padding:			#{$btn--sizes-pad * nth($btn--size, 2)};
			}
		}

		.pbar{			
			padding-left:			1rem;
			height:					auto!important;
			.pbar--item{
				&::after{
					@include		transition(background $transition-scheme 0s ease-in-out);					
					background:		RGBA(var(--sch-clr-ui-text) / 20%);
				}
				> div::after{
					left:			0!important;
				}
			}
		}
	}

	// FEEDBACK
	&.feedback{
		.borders > span{
			border-color:			$btn-clr-primary-hex;
			@include				transition(background $transition-scheme 0s ease-in-out);
		}
	}

	// BORDERS//
	.borders{
		$border-width:				4px;
		$border-size:				14px;

		@include					abs-pos(0,0,0,0);
		pointer-events:				none;

		> span{
			width:					$border-size;
			height:					$border-size;
			border-style:			solid;			
			border-color:			RGBA(var(--sch-clr-grid-border) / var(--sch-clr-grid-border-op));
			@include				transition(border-color $transition-scheme 0s ease-in-out);
		}

		.border-tl{
			@include				abs-pos(0,auto,auto,0);
			border-top-width:		$border-width;		
			border-left-width:		$border-width;		
		}

		.border-tr{
			@include				abs-pos(0,0,auto,auto);
			border-top-width:		$border-width;		
			border-right-width:		$border-width;		
		}

		.border-bl{
			@include				abs-pos(auto,auto,0,0);
			border-bottom-width:	$border-width;		
			border-left-width:		$border-width;		
		}

		.border-br{
			@include				abs-pos(auto,0,0,auto);
			border-bottom-width:	$border-width;		
			border-right-width:		$border-width;		
		}
	}
}